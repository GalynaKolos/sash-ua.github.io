.logo__bg, .social__item_facebook, .social__item_facebook:hover, .social__item_twitter, .social__item_twitter:hover, .social__item_rss, .social__item_rss:hover, .social__item_linkedin, .social__item_linkedin:hover, .social__item_skype, .social__item_skype:hover, #menu__search_btn::after, .advants__context_1::before, .advants__context_2::before, .advants__context_3::before, .services__hover:hover::before, .contacts__address::before, .contacts__tel::before, .contacts__email::before {
  display: inline-block;
  background-image: url("../img/sprites/sprite.svg");
  background-size: 25.1875em 26.3125em; }

.lt-ie9 .logo__bg, .lt-ie9 .social__item_facebook, .lt-ie9 .social__item_facebook:hover, .lt-ie9 .social__item_twitter, .lt-ie9 .social__item_twitter:hover, .lt-ie9 .social__item_rss, .lt-ie9 .social__item_rss:hover, .lt-ie9 .social__item_linkedin, .lt-ie9 .social__item_linkedin:hover, .lt-ie9 .social__item_skype, .lt-ie9 .social__item_skype:hover, .lt-ie9 #menu__search_btn::after, .lt-ie9 .advants__context_1::before, .lt-ie9 .advants__context_2::before, .lt-ie9 .advants__context_3::before, .lt-ie9 .services__hover:hover::before, .lt-ie9 .contacts__address::before, .lt-ie9 .contacts__tel::before, .lt-ie9 .contacts__email::before {
  background-image: url("../img/sprites/sprite.png"); }

@font-face {
  font-family: "ubuntu m";
  src: url("../fonts/ubuntu_m/ubuntu-m-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/ubuntu_m/ubuntu-m-webfont.woff2") format("woff2"), url("../fonts/ubuntu_m/ubuntu-m-webfont.woff") format("woff"), url("../fonts/ubuntu_m/ubuntu-m-webfont.ttf") format("truetype"), url("../fonts/ubuntu_m/ubuntu-m-webfont.svg#ubuntu m") format("svg");
  font-style: normal;
  font-weight: 500; }

@font-face {
  font-family: "ubuntu l";
  src: url("../fonts/ubuntu_l/ubuntu-l-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/ubuntu_l/ubuntu-l-webfont.woff2") format("woff2"), url("../fonts/ubuntu_l/ubuntu-l-webfont.woff") format("woff"), url("../fonts/ubuntu_l/ubuntu-l-webfont.ttf") format("truetype"), url("../fonts/ubuntu_l/ubuntu-l-webfont.svg#ubuntu l") format("svg");
  font-style: normal;
  font-weight: 400; }

@font-face {
  font-family: "ubuntu c";
  src: url("../fonts/ubuntu_c/ubuntu-c-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/ubuntu_c/ubuntu-c-webfont.woff2") format("woff2"), url("../fonts/ubuntu_c/ubuntu-c-webfont.woff") format("woff"), url("../fonts/ubuntu_c/ubuntu-c-webfont.ttf") format("truetype"), url("../fonts/ubuntu_c/ubuntu-c-webfont.svg#ubuntu c") format("svg");
  font-style: normal;
  font-weight: 500; }

html, body, .wrapper, .wrapper__box, .menu__wrapper, .wrapper__logo, .logo, .slider, .advants__article, .wrapper_services, .services__header, .services__box_wrapper, .wrapper-news, .wrapper-news__box, .banners, .wrapper__brands, .brands, .wrapper__footer, .wrapper__contacts {
  font-family: 'ubuntu m', Arial, Helvetica, sans-serif;
  position: relative;
  width: 100%;
  z-index: -100;
  -khtml-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box; }

img {
  vertical-align: text-bottom; }

.link, .social__link, .menu__link, .services__name_link {
  display: block;
  text-decoration: none;
  -webkit-transition: color, 0.2s, ease;
  transition: color, 0.2s, ease; }

.wrapper, .wrapper__box, .menu__wrapper, .wrapper__logo, .logo, .slider, .advants__article, .wrapper_services, .services__header, .services__box_wrapper, .wrapper-news, .wrapper-news__box, .banners, .wrapper__brands, .brands, .wrapper__footer, .wrapper__contacts {
  height: auto; }

.wrapper__box, .menu__wrapper {
  margin: 0 auto;
  width: 1160px; }
  @media (max-width: 73.9275em) {
    .wrapper__box, .menu__wrapper {
      width: 100%; } }

.wrapper__logo {
  height: 90px;
  padding: 37px 0 0 5px;
  z-index: 10; }
  @media (max-width: 29.99em) {
    .wrapper__logo {
      padding: 37px 0 0 0; } }

.logo {
  width: 216px;
  height: 37px;
  line-height: 37px;
  float: left; }
  @media (max-width: 29.99em) {
    .logo {
      margin: 0 auto;
      float: none; } }

.logo__bg {
  width: 2.25em;
  height: 2.25em;
  background-position: -7.625em -7.75em;
  float: left;
  margin-right: 9px; }
  .lt-ie9 .logo__bg {
    width: 36px;
    height: 36px;
    background-position: -122px -124px; }
  @media (max-width: 29.99em) {
    .logo__bg {
      margin-top: 2px; } }

.logo__h1, .logo__fn, .logo__ln {
  margin: -2px 0 0 0;
  padding: 0;
  font-size: 30px; }

.logo__fn {
  display: block;
  line-height: 26px; }

.logo__ln {
  font-family: 'ubuntu l', Arial, Helvetica, sans-serif;
  font-size: 12px;
  display: block;
  line-height: 22px;
  letter-spacing: 3.5px; }

.social {
  float: right;
  margin-top: 10px;
  width: 166px; }
  @media (max-width: 29.99em) {
    .social {
      display: none; } }

.social__link {
  height: 1em;
  width: 1em; }

.social__item {
  margin-left: 14px; }

@media (min-width: 30em) {
  .menu__main .menu__item_social {
    display: none; } }

@media (max-width: 29.99em) {
  .menu__main .social__item:first-child {
    margin: 0 10px 0 0; }
  .menu__main .social__item:last-child {
    margin-left: 8px; } }

.social__item_facebook {
  width: 1em;
  height: 1em;
  background-position: -1em -0.75em; }
  .lt-ie9 .social__item_facebook {
    width: 16px;
    height: 16px;
    background-position: -16px -12px; }
  .social__item_facebook:hover {
    width: 1em;
    height: 1em;
    background-position: -2em -1.75em; }
    .lt-ie9 .social__item_facebook:hover {
      width: 16px;
      height: 16px;
      background-position: -32px -28px; }

.social__item_twitter {
  width: 1em;
  height: 1em;
  background-position: -23.1875em -24.3125em; }
  .lt-ie9 .social__item_twitter {
    width: 16px;
    height: 16px;
    background-position: -371px -389px; }
  .social__item_twitter:hover {
    width: 1em;
    height: 1em;
    background-position: -24.1875em -25.3125em; }
    .lt-ie9 .social__item_twitter:hover {
      width: 16px;
      height: 16px;
      background-position: -387px -405px; }

.social__item_rss {
  width: 1em;
  height: 1em;
  background-position: -15.9375em -16.4375em; }
  .lt-ie9 .social__item_rss {
    width: 16px;
    height: 16px;
    background-position: -255px -263px; }
  .social__item_rss:hover {
    width: 1em;
    height: 1em;
    background-position: -16.9375em -17.4375em; }
    .lt-ie9 .social__item_rss:hover {
      width: 16px;
      height: 16px;
      background-position: -271px -279px; }

.social__item_linkedin {
  width: 1em;
  height: 1em;
  background-position: -5.625em -5.75em; }
  .lt-ie9 .social__item_linkedin {
    width: 16px;
    height: 16px;
    background-position: -90px -92px; }
  .social__item_linkedin:hover {
    width: 1em;
    height: 1em;
    background-position: -6.625em -6.75em; }
    .lt-ie9 .social__item_linkedin:hover {
      width: 16px;
      height: 16px;
      background-position: -106px -108px; }

.social__item_skype {
  width: 1em;
  height: 1em;
  background-position: -17.9375em -18.4375em; }
  .lt-ie9 .social__item_skype {
    width: 16px;
    height: 16px;
    background-position: -287px -295px; }
  .social__item_skype:hover {
    width: 1em;
    height: 1em;
    background-position: -18.9375em -19.4375em; }
    .lt-ie9 .social__item_skype:hover {
      width: 16px;
      height: 16px;
      background-position: -303px -311px; }

.menu__wrapper {
  background-color: #2a2d32;
  height: 56px;
  margin-top: 20px;
  z-index: 101; }
  .menu__wrapper::after {
    clear: both;
    content: "";
    display: block; }

.menu__main {
  -webkit-transition: all 1s;
  transition: all 1s;
  float: left;
  margin: 0;
  max-height: 56px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  z-index: 100; }
  @media (max-width: 47.99em) {
    .menu__main:hover {
      -webkit-transition: all 1s;
      transition: all 1s;
      max-height: 550px; }
    .menu__main:hover .menu__item:not(.menu__item_social) {
      display: inherit;
      height: 56px;
      line-height: 56px;
      border-bottom: 1px solid #181a1d; } }

.menu__item {
  border-right: 1px solid #181a1d;
  display: inline-block;
  height: 56px;
  line-height: 56px;
  z-index: 101;
  -khtml-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box; }
  .menu__item:first-child {
    background-color: #248cec; }
  @media (max-width: 47.99em) {
    .menu__item {
      width: 103px;
      background-color: #2a2d32;
      text-align: center;
      display: block; } }

.menu__link {
  font-family: 'ubuntu c', Arial, Helvetica, sans-serif;
  font-size: 14px;
  color: #ffffff;
  padding: 0 38px; }
  .menu__link:hover {
    color: #d9a412; }
  @media (max-width: 47.99em) {
    .menu__link {
      padding: 0 25px; } }

.menu__search {
  width: 224px;
  margin-right: 10px;
  float: right;
  position: absolute;
  right: 2px;
  top: 4px;
  -khtml-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box; }
  @media (max-width: 61.24em) {
    .menu__search {
      max-width: 150px; } }

.menu__search_query {
  width: 100%;
  height: 36px;
  border: 1px solid #000000;
  background-color: #35383c;
  padding-left: 15px;
  color: #535659; }
  .menu__search_query:focus {
    color: #ffffff; }

#menu__search_btn {
  width: 39px;
  height: 39px;
  position: absolute;
  right: -15px;
  top: 0;
  cursor: pointer; }
  #menu__search_btn::after {
    content: '';
    width: 1.25em;
    height: 1.875em;
    background-position: -19.9375em -20.4375em;
    position: absolute;
    top: 6px;
    right: 8px; }
    .lt-ie9 #menu__search_btn::after {
      width: 20px;
      height: 30px;
      background-position: -319px -327px; }

.slider {
  margin-top: 40px; }

.slider__slide {
  display: none; }

.slider__slide img {
  width: 100%; }

.slider__txt-box {
  max-width: 30%;
  letter-spacing: 3.5px;
  z-index: 1;
  position: absolute;
  padding: 22px 34px 22px 29px;
  line-height: 51px;
  bottom: 3.2vh;
  left: 2.5vw; }
  .slider__txt-box::before {
    content: '';
    background-color: rgba(26, 26, 26, 0.9);
    z-index: -1;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 70%; }
  .slider__txt-box::after {
    content: '';
    background-color: rgba(26, 26, 26, 0.9);
    z-index: -1;
    position: absolute;
    bottom: 0;
    right: 0;
    height: 46%;
    width: 30%; }
  @media (max-width: 47.99em) {
    .slider__txt-box {
      line-height: 30px;
      padding: 5px 9px 4px 14px;
      bottom: 2.5vh; } }

.special .slider__txt-box::after {
  bottom: 25%; }

.slider__txt {
  margin: 0;
  font-family: "ubuntu l", Arial, Helvetica, sans-serif;
  font-size: 3.125em; }
  .slider__txt:first-child {
    color: #f4b60d; }
  .slider__txt:not(:first-child) {
    color: #ffffff; }
  @media (min-width: 30em) and (max-width: 47.99em) {
    .slider__txt {
      font-size: calc(1em + 1vw);
      bottom: 2.5vh; } }
  @media (max-width: 29.99em) {
    .slider__txt {
      font-size: calc(1em + 1vw);
      bottom: 2.5vh; } }

.slider__points {
  width: 84px;
  margin: -34px auto 0 auto;
  z-index: 100; }

.slider__point {
  width: 15px;
  height: 15px;
  -ms-box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);
  -o-box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);
  background-color: #ffffff;
  display: inline-block;
  z-index: 100; }
  .slider__point:not(:last-child) {
    margin-right: 15px; }

.slider__point_act {
  display: none;
  width: 9px;
  height: 9px;
  background-color: #001d1d;
  margin: 3px; }

.advants {
  height: 100%; }
  .advants::after {
    clear: both;
    content: "";
    display: block; }

.advants__article {
  margin-top: 82px;
  height: 100%;
  width: 31%;
  float: left;
  color: #2a2b2e;
  z-index: 1; }
  .advants__article:not(:last-child) {
    margin-right: 3.4%; }
  @media (max-width: 47.99em) {
    .advants__article {
      width: 100%; } }
  @media (max-width: 29.99em) {
    .advants__article {
      clear: both;
      float: none;
      margin-top: 3%; } }

.advants__box {
  float: left; }

.advants__numb {
  color: #e9e9ea;
  font-size: 90px;
  letter-spacing: -4.5px;
  line-height: 74px;
  width: 28%; }
  @media (max-width: 63.99em) {
    .advants__numb {
      height: inherit; } }
  @media (max-width: 29.99em) {
    .advants__numb {
      font-size: 1em;
      font-size: calc(1em + 1vw);
      height: inherit;
      letter-spacing: 0;
      width: 10%;
      border-top: 1px dotted #2a2d32; } }

.advants__context {
  padding-left: 19px;
  width: 66%; }
  @media (max-width: 29.99em) {
    .advants__context {
      font-size: 1em;
      font-size: calc(1em + 1vw);
      width: 85%; } }

.advants__context_1::before, .advants__context_2::before, .advants__context_3::before {
  width: 2em;
  height: 2em;
  background-position: -3em -2.75em;
  content: '';
  margin-left: 4px;
  margin-top: 6px; }
  .lt-ie9 .advants__context_1::before, .lt-ie9 .advants__context_2::before, .lt-ie9 .advants__context_3::before {
    width: 32px;
    height: 32px;
    background-position: -48px -44px; }

.advants__context_2::before {
  width: 2em;
  height: 2em;
  background-position: -9.875em -10em; }
  .lt-ie9 .advants__context_2::before {
    width: 32px;
    height: 32px;
    background-position: -158px -160px; }

.advants__context_3::before {
  width: 2em;
  height: 2em;
  background-position: -21.1875em -22.3125em; }
  .lt-ie9 .advants__context_3::before {
    width: 32px;
    height: 32px;
    background-position: -339px -357px; }

.advants__header {
  font-size: 20px;
  margin: 10px 0 10px 4px; }

.advants__txt {
  font-family: Arial, Arial, Helvetica, sans-serif;
  font-size: 0.8125em;
  line-height: 20px;
  margin-top: 20px; }

.advants__arrow {
  color: #248cec;
  margin: 0 0 0 7px; }

.advants__link {
  font-family: "ubuntu m", Arial, Helvetica, sans-serif;
  font-size: 0.8125em;
  color: #2a2b2e;
  line-height: 20px;
  margin-top: 14px;
  min-width: 95px; }
  .advants__link:hover {
    color: #248cec; }
  .advants__link:hover .advants__arrow {
    color: #989fb3; }

.wrapper_services {
  background-color: #2a2d32;
  height: 100%;
  margin-top: 83px;
  padding: 0 0 52px 2px; }
  @media (max-width: 73.9275em) {
    .wrapper_services {
      padding: 0 0 3.75% .15%; } }
  .wrapper_services::after {
    clear: both;
    content: "";
    display: block; }

.services__header {
  color: #fff;
  font-size: 24px;
  height: 123px;
  padding: 42px 0 0 1px; }
  @media (max-width: 47.99em) {
    .services__header {
      height: 73px; } }

@media (max-width: 73.9275em) {
  .services__header_name {
    display: block;
    margin: auto;
    width: 140px; } }

.services__box_wrapper {
  margin: 0 auto; }
  .services__box_wrapper::after {
    clear: both;
    content: "";
    display: block; }
  @media (min-width: 48em) and (max-width: 73.9275em) {
    .services__box_wrapper {
      padding-left: 3.45%;
      width: 644px; } }
  @media (min-width: 30em) and (max-width: 47.99em) {
    .services__box_wrapper {
      padding-left: 3.45%;
      width: 83%; } }
  @media (max-width: 29.99em) {
    .services__box_wrapper {
      width: 100%; } }

.services__box {
  float: left;
  font-size: 14px;
  margin-right: 3.4%;
  position: relative;
  text-align: center; }
  @media (min-width: 48em) and (max-width: 73.9275em) {
    .services__box {
      display: inline-block;
      float: none;
      margin: 2vh 1vw; } }
  @media (min-width: 30em) and (max-width: 47.99em) {
    .services__box {
      display: inline-block;
      float: none;
      margin-top: 5vh; } }
  @media (max-width: 29.99em) {
    .services__box {
      float: none;
      margin: 5vh auto; } }

@media (min-width: 48em) {
  .services__box_last {
    margin-right: 0; } }

.services__name_link {
  -webkit-transition: color, 0.2s;
  transition: color, 0.2s;
  color: #fff;
  font-size: 16px;
  margin-top: 31px; }
  .services__name_link:hover {
    color: #f4b60d; }

@media (max-width: 29.99em) {
  .services__img, .services__hover {
    height: 260px;
    margin: 0 auto;
    width: 260px; } }

@media (min-width: 30em) and (max-width: 47.99em) {
  .services__img, .services__hover {
    height: 35vw;
    width: 35vw; } }

.services__hover {
  line-height: 0;
  position: relative; }
  .services__hover::before {
    background: none;
    content: '';
    z-index: 100; }
  .services__hover::after {
    -webkit-transition: color, 0.1s;
    transition: color, 0.1s;
    background: none;
    content: ''; }
  .services__hover:hover::before {
    width: 2.1875em;
    height: 2.1875em;
    background-position: -12.5em -13em;
    content: '';
    left: 0;
    margin: calc(50% - 17px);
    position: absolute;
    top: 0;
    z-index: 100; }
    .lt-ie9 .services__hover:hover::before {
      width: 35px;
      height: 35px;
      background-position: -200px -208px; }
  .services__hover:hover::after {
    -webkit-transition: color, 0.1s;
    transition: color, 0.1s;
    background: rgba(36, 140, 236, 0.9);
    content: '';
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%; }

.wrapper-news {
  background-color: #f7f7f7;
  padding-bottom: 57px; }
  .wrapper-news::after {
    clear: both;
    content: "";
    display: block; }
  @media (max-width: 47.99em) {
    .wrapper-news {
      padding-bottom: 0; } }

.wrapper-news__box {
  float: left;
  width: 51.7%; }
  @media (min-width: 48em) and (max-width: 73.9275em) {
    .wrapper-news__box {
      width: 59%; } }
  @media (max-width: 47.99em) {
    .wrapper-news__box {
      padding: 3vw;
      width: 100%; } }

.wrapper-news__header {
  color: #2a2d32;
  height: 92px;
  padding: 38px 0 0 1px;
  width: 100%; }
  @media (max-width: 47.99em) {
    .wrapper-news__header {
      padding: 0; } }

.news {
  margin-bottom: 32px;
  position: relative;
  width: 599px; }
  @media (min-width: 48em) and (max-width: 73.9275em) {
    .news {
      width: 100%; } }
  @media (max-width: 47.99em) {
    .news {
      width: 100%; } }

.news__article {
  display: inline-block;
  width: 66%; }
  @media (min-width: 48em) and (max-width: 73.9275em) {
    .news__article {
      width: 60%; } }
  @media (max-width: 47.99em) {
    .news__article {
      display: block;
      width: 100%; } }

.news__date_wrapper {
  height: 80px;
  left: -17px;
  line-height: 40px;
  position: absolute;
  text-align: center;
  top: 12px;
  width: 40px; }
  @media (max-width: 73.9275em) {
    .news__date_wrapper {
      left: 0; } }

.news__date {
  height: 40px;
  vertical-align: middle;
  width: 40px; }

.news__img {
  float: left;
  margin-right: 33px; }
  @media (min-width: 48em) and (max-width: 73.9275em) {
    .news__img {
      margin-right: 3%; } }

.news__article_name {
  font-size: 16px;
  margin: 4px 0; }

.news__link {
  color: #2a2d32;
  display: inline; }
  .news__link:hover {
    color: #248cec; }

.news__link_txt {
  color: #248cec; }

.news__txt, .banners__accordion_txt {
  font-family: Arial, Arial, Helvetica, sans-serif;
  font-size: 0.8125em;
  line-height: 20px;
  margin: 6px 0; }

.news__date_month {
  background-color: #248cec; }

.news__date_date {
  background-color: #f4b60d; }

.news__article_txt {
  margin: 20px 0; }

.news__2_name {
  margin-top: 0; }

.banners {
  width: 48.2%; }
  @media (max-width: 73.9275em) {
    .banners {
      width: 40%; } }
  @media (max-width: 47.99em) {
    .banners {
      width: 100%;
      padding: 3vw; } }

.banners__header {
  padding: 38px 0 0 1px; }

.banners__accordion {
  margin-bottom: 4px; }

.banners__accordion_txt {
  -webkit-transition: all, 0.2s, ease;
  transition: all, 0.2s, ease;
  height: 0;
  margin: 0;
  overflow: hidden;
  padding: 0 0 0 37px; }

.banners__accordion_act .banners__accordion_txt {
  -webkit-transition: all, 0.2s, ease;
  transition: all, 0.2s, ease;
  height: 133px;
  padding: 26px 7px 0 37px; }

.banners__accordion_act .banners__accordion_header {
  background-color: #f4b60d;
  border: 0; }
  .banners__accordion_act .banners__accordion_header::before {
    display: none; }
  .banners__accordion_act .banners__accordion_header::after {
    display: inherit; }

.banners__accordion_header {
  -webkit-transition: background-color, 0.2s, ease;
  transition: background-color, 0.2s, ease;
  background-color: #fff;
  border: 1px solid #e8e8e8;
  cursor: pointer;
  height: 39px;
  padding: 0 0 0 43px;
  position: relative; }
  .banners__accordion_header::before {
    content: '\FF0B';
    left: 13px;
    position: absolute;
    top: 11px; }
  .banners__accordion_header::after {
    color: #fff;
    content: '\23BB';
    display: none;
    font-size: 20px;
    left: 15px;
    position: absolute;
    top: 9px; }
  .banners__accordion_header:hover {
    -webkit-transition: background-color, 0.2s, ease;
    transition: background-color, 0.2s, ease;
    background-color: #f4b60d; }

.banners__accordion_name {
  font-size: 13px;
  height: 39px;
  line-height: 39px;
  margin: 0;
  padding-left: 10px; }

.brands {
  padding: 82px 0 81px 0;
  width: 1160px; }
  @media (max-width: 73.9275em) {
    .brands {
      padding: 2vh 0;
      width: 74vw; } }
  @media (max-width: 47.99em) {
    .brands {
      width: 83vw; } }
  @media (max-width: 29.99em) {
    .brands {
      width: 69vw; } }

.brands__item {
  display: inline-block;
  margin: 0 44px; }
  .brands__item:first-child {
    margin-left: 23px; }
  .brands__item:last-child {
    margin-right: 0; }
  @media (max-width: 73.9275em) {
    .brands__item {
      margin: 0 2vw; }
      .brands__item:first-child {
        margin-left: 0; }
      .brands__item:last-child {
        margin-right: 0; } }
  @media (max-width: 47.99em) {
    .brands__item {
      margin: 5vw 7vw; }
      .brands__item:first-child {
        margin-left: 7vw; }
      .brands__item:last-child {
        margin-right: 0; } }

.brands__img {
  opacity: .5;
  vertical-align: middle; }
  .brands__img:hover {
    opacity: .9; }
  @media (min-width: 48em) and (max-width: 73.9275em) {
    .brands__img {
      width: 8.3vw; } }
  @media (min-width: 30em) and (max-width: 47.99em) {
    .brands__img {
      width: 13vw; } }
  @media (max-width: 29.99em) {
    .brands__img {
      width: 18vw; } }

.brands__link {
  line-height: 64px; }

.wrapper__footer {
  background-color: #2a2d32;
  margin-top: 11px;
  padding: 42px 0 54px 0; }

@media (max-width: 73.9275em) {
  .footer {
    width: 93vw; } }

.footer__box {
  -khtml-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
  color: #595b5f;
  display: inline-block;
  width: 22%; }
  .footer__box:not(:last-child) {
    margin-right: 41px; }
  .footer__box:hover .footer__menu_link {
    color: #828385; }
  @media (max-width: 73.9275em) {
    .footer__box {
      width: 22.7%; }
      .footer__box:not(:last-child) {
        margin-right: 2vw; } }
  @media (max-width: 47.99em) {
    .footer__box {
      display: block;
      width: 70%;
      margin: 0 auto; }
      .footer__box:not(:last-child) {
        margin-right: auto; } }

.footer__header {
  color: #fff;
  font-size: 16px;
  margin-bottom: 34px; }

.footer__menu {
  padding: 0; }
  .footer__menu:hover {
    color: #76787a; }

.footer__menu_item {
  height: 36px;
  list-style-type: none; }
  .footer__menu_item:not(:last-child) {
    border-bottom: 1px solid #595b5f; }

.footer__box .footer__menu_link {
  font-family: Arial, Arial, Helvetica, sans-serif;
  font-size: 0.8125em;
  color: #6a6c70;
  line-height: 36px; }
  .footer__box .footer__menu_link:hover {
    color: #248cec; }

.wrapper__contacts {
  background-color: #35383c;
  padding: 18px 0; }
  .wrapper__contacts::after {
    clear: both;
    content: "";
    display: block; }

.contacts__box, .contacts__item {
  color: #626468;
  display: inline-block; }

@media (max-width: 47.99em) {
  .contacts__contacts {
    width: 60%; } }

.contacts__copyright {
  font-family: Arial, Arial, Helvetica, sans-serif;
  font-size: 0.75em;
  float: right;
  height: 18px;
  line-height: 18px; }
  @media (max-width: 47.99em) {
    .contacts__copyright {
      margin: 11px 0; } }

.contacts__item {
  font-family: Arial, Arial, Helvetica, sans-serif;
  font-size: 0.75em; }
  @media (max-width: 29.99em) {
    .contacts__item {
      display: block; } }

.contacts__address, .contacts__tel, .contacts__email {
  margin: 0 25px;
  position: relative; }
  .contacts__address::before, .contacts__tel::before, .contacts__email::before {
    font-size: 28px;
    width: 0.625em;
    height: 1em;
    background-position: -5em -4.75em;
    content: '';
    left: -24px;
    position: absolute;
    top: -8px; }
    .lt-ie9 .contacts__address::before, .lt-ie9 .contacts__tel::before, .lt-ie9 .contacts__email::before {
      width: 10px;
      height: 16px;
      background-position: -80px -76px; }

.contacts__tel {
  margin: 0 30px; }
  .contacts__tel:hover {
    text-decoration: underline; }
  .contacts__tel::before {
    width: 0.625em;
    height: 1em;
    background-position: -11.875em -12em; }
    .lt-ie9 .contacts__tel::before {
      width: 10px;
      height: 16px;
      background-position: -190px -192px; }
  @media (max-width: 47.99em) {
    .contacts__tel {
      margin: 11px 26px; } }

.contacts__email {
  margin: 0 35px; }
  .contacts__email:hover {
    text-decoration: underline; }
  .contacts__email::before {
    width: 1em;
    height: 0.75em;
    background-position: 0em 0em;
    left: -36px;
    top: -5px; }
    .lt-ie9 .contacts__email::before {
      width: 16px;
      height: 12px;
      background-position: 0px 0px; }

/*# sourceMappingURL=data:application/json;base64, */
